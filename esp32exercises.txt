#include <WiFi.h>
#include <WebServer.h>


const char* ssid = "realme_9i";
const char* password = "1234abcde";


const int led1 = 4;
const int led2 = 17;
const int led3 = 5;
const int led4 = 18;
const int led5 = 19;

WebServer server(80);



void handleRoot() {
  String html = "<html><head><title>ESP32 LED Control</title></head><body>";
  html += "<h1>Control LEDs</h1>";
  html += "<button onclick=\"fetch('/on')\">Turn All LEDs ON</button><br><br>";
  html += "<button onclick=\"fetch('/alternate')\">Start Alternate Mode</button><br><br>";
  html += "<button onclick=\"fetch('/two')\">Start Two-by-Two Mode</button><br><br>";
  html += "<button onclick=\"fetch('/off')\">Turn All LEDs OFF</button><br><br>";
  html += "</body></html>";
  server.send(200, "text/html", html);
}

bool alternateMode = false;
bool twoMode = false;

void handleOn() {
  digitalWrite(led1, HIGH);
  digitalWrite(led2, HIGH);
  digitalWrite(led3, HIGH);
  digitalWrite(led4, HIGH);
  digitalWrite(led5, HIGH);
  alternateMode = false;
  twoMode = false;
  server.send(200, "text/plain", "LED are ON");
}

void handleOff() {
 digitalWrite(led1, LOW);
  digitalWrite(led2, LOW);
  digitalWrite(led3, LOW);
  digitalWrite(led4, LOW);
  digitalWrite(led5, LOW);
  alternateMode = false;
  twoMode = false;
  server.send(200, "text/plain", "LED is OFF");
}



void ledOff() {
  digitalWrite(led1, LOW);
  digitalWrite(led2, LOW);
  digitalWrite(led3, LOW);
  digitalWrite(led4, LOW);
  digitalWrite(led5, LOW);
}

void handleAlternate() {
  alternateMode = true;
  twoMode = false;
  server.send(200, "text/plain", "LED is Alternating");
}

void handleTwo() {
  alternateMode = false;
  twoMode = true;
  server.send(200, "text/plain", "LED is Two-by-Two");
}



void setup() {
  Serial.begin(115200);

  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(led3, OUTPUT);
  pinMode(led4, OUTPUT);
  pinMode(led5, OUTPUT);

  digitalWrite(led1, LOW);
  digitalWrite(led2, LOW);
  digitalWrite(led3, LOW);
  digitalWrite(led4, LOW);
  digitalWrite(led5, LOW);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("WiFi connected");
  Serial.println(WiFi.localIP());

  server.on("/", handleRoot);
  server.on("/on", handleOn);
  server.on("/off", handleOff);
  server.on("/alternate", handleAlternate);
  server.on("/two", handleTwo);

  server.begin();
  Serial.println("Server started");
}

void loop() {
  server.handleClient();

  if (alternateMode) {
    ledOff();
    digitalWrite(led1, HIGH);
    delay(500);
    digitalWrite(led1, LOW);
    digitalWrite(led3, HIGH);
    delay(500);
    digitalWrite(led3, LOW);
    digitalWrite(led5, HIGH);
    delay(500);
    digitalWrite(led5, LOW);
    digitalWrite(led2, HIGH);
    delay(500);
    digitalWrite(led2, LOW);
    digitalWrite(led4, HIGH);
    delay(500);
    digitalWrite(led4, LOW);
  }

  if (twoMode) {
    ledOff();
    digitalWrite(led3, HIGH);
    delay(500);
    digitalWrite(led3, LOW);
    digitalWrite(led2, HIGH);
    digitalWrite(led4, HIGH);
    delay(500);
    digitalWrite(led2, LOW);
    digitalWrite(led4, LOW);
    digitalWrite(led1, HIGH);
    digitalWrite(led5, HIGH);
    delay(500);
    digitalWrite(led1, LOW);
    digitalWrite(led5, LOW);
  }
}
